//======================================================================================================================
//
// 命名規則[命名規則.txt]
//
//---- 詳細 ------------------------------------------------------------------------------------------------------------
// 命名規則について記載する。
// 
//----------------------------------------------------------------------------------------------------------------------
// 更新日     更新者        バージョン 更新内容
// ---------- ------------- ---------- ---------------------------------------------------------------------------------
// yyyy/MM/dd anonymous     --.--.--   -
// 2024/12/12 大行佑也      01.00.00   新規作成
//======================================================================================================================
■１：クラスの型宣言
先頭を大文字にする。

■２：構造体・インターフェース・列挙型、等の型宣言
先頭に大文字でで型を表す文字を付ける
    struct   ：S
    interface：I
    enum     ：E

■３：関数（メソッド）
    ・２－１：関数名（メソッド名）
        先頭にアクセス範囲を示す「G」または「L」と、「Fn」を付ける。
        アクセス修飾子がpublic以上の関数   ：G
        アクセス修飾子がprotected以下の関数：L
        
        例１）public関数
            public void gfnHoge();
        
        例２）private関数
            private int lfnHogehoge(object data);

    ・２－２：引数名
        先頭に値渡しか参照渡しかを示す「v」または「r」と、
        データ型を示す文字を付ける。
        - 値型、参照型
            値型  ：v
            参照型：r
        - データ型
            型名       ：付ける文字 ：型としての値型か参照型か
            bool       ：b          ：値型
            short      ：s          ：値型
            ushort     ：us         ：値型
            int        ：i          ：値型
            uint       ：ui         ：値型
            long       ：l          ：値型
            ulong      ：ul         ：値型
            float      ：f          ：値型
            double     ：d          ：値型
            decimal    ：dcm        ：値型
            char       ：c          ：値型
            string     ：str        ：参照型
            object     ：o          ：参照型                 ※UnityEngine.Objectとは別だよ。System.Objectのことだよ。
            List       ：lst        ：参照型
            Dictionary ：dic        ：参照型
            その他は任せます。わかりやすいように3文字以内で。

        例１）値渡し、int型の引数
            public void gfnHoge(int viCount);

        例２）参照渡し、float型の引数
            protected void lfnHoge(ref float rfDistance);

        例３）string型
            private void lfn(string rsName);


■４：プロパティ
先頭を大文字にする。

■５：定数
すべて大文字。
先頭にアクセス範囲を示す「G」または「L」と、「C」と「_」を付ける。
単語ごとに「_」を入れる。
    G：アクセス修飾子がpublic以上の関数
    L：アクセス修飾子がprotected以下の関数

    例１）public定数
        public int GC_OK = 0;

    例２）private定数
        private int LC_LOOP_MAX = 100;

■６：変数
先頭にアクセス範囲を示す「g」、「m」または「l」と、「_」、
データ型を示す文字を付ける。
    g：静的(static)変数
    m：メンバ変数
    l：関数内変数

    - データ型
        型名       ：付ける文字
        bool       ：b
        short      ：s
        ushort     ：us
        int        ：i
        uint       ：ui
        long       ：l
        ulong      ：ul
        float      ：f
        double     ：d
        decimal    ：dcm
        char       ：c
        string     ：str
        object     ：o
        List       ：lst
        Dictionary ：dic
        その他は任せます。わかりやすいように3文字以内で。

    例１）